;development comments
;
;1-different ways to find other agents within a vision range:
; a) if they are neighbors to the agent looking (probably includes oneself as well?)
;let target one-of citizens-on neighbors
; b) if they look within a radius (360 degrees around?)
;set target one-of other citizens in-radius 2
;let police one-of other cops in-radius 2

;let nearby-officers other turtles with [breed = cops] in-radius (vision_range * 3)
;set target min-one-of nearby-officers [xcor + ycor]
;

;2-finding a patch in the neighborhood to move to that does not contain agents of a certain breed
; c) use patches by letting each patch define its neighborhood
;-requires own patch-variable 'neighborhood'
;patches-own [
;  neighborhood        ; surrounding patches within the vision radius
;]
; -requires to ask the patches to set their variable neighborhood to the patches within their in-radius vision
;ask patches [
;  set neighborhood patches in-radius vision ; vision is a variable, set for example by ruler
; ]
;
;- moving to a patch that contains no police
;to move
;  let targets neighborhood with [not any? cops-here]
;  if any? targets [move-to one-of targets]
;
;3- cops finding citizens close enough nearby to arrest
; if any? (citizens-on neighborhood) with [ active? ] [
;    let suspect one-of (citizens-on neighborhood) with [ active? ]
;    move-to suspect  ; move to patch of the suspect
;    ask suspect [
;      set active? false
;      set jail-term random max-jail-term
;      go-to prison
;    ]